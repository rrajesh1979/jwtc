# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Release

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    name: 'Build with Graal on ${{ matrix.os }}'

    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, macOS-latest ]
        gu-binary: [ gu, gu.cmd ]
        exclude:
          - os: ubuntu-latest
            gu-binary: gu.cmd
          - os: macos-latest
            gu-binary: gu.cmd
    runs-on: ${{ matrix.os }}

#    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: 'Set up Java'
      uses: actions/setup-java@v2
      with:
        java-version: 17
        distribution: 'zulu'

    - name: 'Set up Graal'
      uses: DeLaGuardo/setup-graalvm@5.0
      with:
        graalvm: '21.3.0'
        java: 'java17'

    - name: 'Cache Maven packages'
      uses: actions/cache@v2.1.7
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

#    - name: Build with Maven
#      run: mvn -B package --file pom.xml

    - name: 'Install native-image component'
      run: |
        ${{ matrix.gu-binary }} install native-image

    - name: 'Cache Maven packages'
      uses: actions/cache@v2.1.7
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: 'Build Native Image'
      run: mvn -B --file pom.xml -Pnative package

    - name: 'Create distribution'
      run: mvn -B --file pom.xml -Pdist package -DskipTests


    - name: Upload artifacts
      uses: actions/upload-artifact@v2.3.1
      with:
        name: artifacts
        path: |
          target/*
          target/*.zip
          target/*.jar
          target/*.tar.gz